import { SignIn, SignInButton, SignedOut, UserButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
dayjs.extend(relativeTime);

import { RouterOutputs, api } from "~/utils/api";
import { LoadingPage } from "~/components/loading";

const CreatePostWizard = () => {
  const { user } = useUser()

  if (!user) return null

  return (
    <div className="flex gap-4 w-full">
      {/* <Image src={user.profileImageUrl} alt="Profile image" className="w-12 h-12 rounded-full" width={56} height={56}/> */}
      <UserButton />
      <input placeholder="What's on your mind?" className="bg-transparent grow outline-none" />
    </div>
    ) 
}


type PostWithUser = RouterOutputs["posts"]["getAll"][number]

const PostView = (props: PostWithUser) => {
  const {post, author} = props
  return (<div key={post.id} className="flex p-4 border-b border-slate-400 gap-3">
    <Image src={author.profilePicture} alt={`@${author.username}'s profile picture`} 
    className="w-12 h-12 rounded-full" width={56} height={56}/>
    <div className="flex flex-col">
      <div className="flex text-slate-300 gap-2 ">
        <span>{`@${author.username}`}</span>
        <span className="font-thin">{dayjs(post.createdAt).fromNow()}</span>
      </div>
      <span>{post.content}</span>
    </div>
    </div>
    )
}

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery()

  if (postsLoading) return <LoadingPage />

  if (!data) return <div>Something went wrong</div>

  return (
    <div className="flex flex-col">
      {data?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  )
}

const Home: NextPage = () => {

  const {isLoaded: userLoaded, isSignedIn} = useUser()

  api.posts.getAll.useQuery()

  if (!userLoaded) return <div/>

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-screen flex justify-center">
        <div className="w-full md:max-w-2xl border-x h-full border-slate-400 ">
          <div className="border-b border-slate-400 p-4 flex">
            {!isSignedIn && (
              <div className="flex justify-center">
                <SignInButton/>
              </div>)}
            {isSignedIn && <CreatePostWizard/>}
          </div>

          <Feed />
        </div>
      </main>
    </>
  )
}

export default Home